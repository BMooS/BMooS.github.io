<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BMooS</title>
  <icon>https://bmoos.github.io/icon.png</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bmoos.github.io/"/>
  <updated>2020-03-11T06:24:23.867Z</updated>
  <id>https://bmoos.github.io/</id>
  
  <author>
    <name>BMooS</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git使用</title>
    <link href="https://bmoos.github.io/2020/03/10/git%E4%BD%BF%E7%94%A8/"/>
    <id>https://bmoos.github.io/2020/03/10/git%E4%BD%BF%E7%94%A8/</id>
    <published>2020-03-09T16:35:22.000Z</published>
    <updated>2020-03-11T06:24:23.867Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Git&quot;&gt;&lt;a href=&quot;#Git&quot; class=&quot;headerlink&quot; title=&quot;Git&quot;&gt;&lt;/a&gt;Git&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;​        git是一个开源的分布式版本控制系统，它能帮助你管理不同的版本，并且随时退回到任意时刻，而且也可以协同开发。之前也学过一点git，不过那阵用不到git，而且学的也比较琐碎难以理解，现在在我有一定基础的情况下，重新学习git，写下这份博客用以记录学习内容。Git指令繁多，但是常用的就十几条，下述介绍的指令掌握了足以应对常规使用，新的指令也会慢慢学习记录。&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具使用" scheme="https://bmoos.github.io/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="git" scheme="https://bmoos.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>XSS跨站脚本漏洞</title>
    <link href="https://bmoos.github.io/2020/03/03/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%BC%8F%E6%B4%9E/"/>
    <id>https://bmoos.github.io/2020/03/03/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-03-03T15:14:24.000Z</published>
    <updated>2020-03-05T16:29:46.623Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​        XSS(cross site scripting)即跨站脚本攻击，是最常见的web应用程序漏洞之一。&lt;/p&gt;
&lt;p&gt;​        XSS是指攻击者在网页嵌入客户端脚本，通常使用的是JavaScript编写的恶意代码，当用户浏览网页时，恶意代码将在用户的浏览器上执行。&lt;/p&gt;
&lt;p&gt;​        XSS属于前端漏洞，受害者是用户，但是网站的管理人员也是用户之一，也有可能被攻击者拿到管理员权限，作为跳板实施攻击。&lt;/p&gt;
&lt;p&gt;​        本篇文章用于对XSS原理解析和对各种类型的XSS介绍。&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="https://bmoos.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="XSS" scheme="https://bmoos.github.io/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>DNS服务以及DNS域传送漏洞</title>
    <link href="https://bmoos.github.io/2020/03/01/DNS%E6%9C%8D%E5%8A%A1%E4%BB%A5%E5%8F%8ADNS%E5%9F%9F%E4%BC%A0%E9%80%81%E6%BC%8F%E6%B4%9E/"/>
    <id>https://bmoos.github.io/2020/03/01/DNS%E6%9C%8D%E5%8A%A1%E4%BB%A5%E5%8F%8ADNS%E5%9F%9F%E4%BC%A0%E9%80%81%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-02-29T16:04:10.000Z</published>
    <updated>2020-03-01T07:04:35.200Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​        疫情影响，宅在家里，开学推迟，要上网课，有课名叫，网络攻防，要上实验，网上靶机，可是靶机，实在不行，自己搭建，两眼蒙蔽，从头做起，选择放弃。(哭)&lt;/p&gt;
&lt;p&gt;​        这次要做的实验内容和DNS域传送漏洞有关，其实也是用工具进行信息收集，之前忽略了信息收集这块，觉得不太重要，但是现在回头来看，这是最重要的一部分，自己也回头补补。&lt;/p&gt;
    
    </summary>
    
    
      <category term="计算机网络" scheme="https://bmoos.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="DNS" scheme="https://bmoos.github.io/tags/DNS/"/>
    
      <category term="DNS域传送漏洞" scheme="https://bmoos.github.io/tags/DNS%E5%9F%9F%E4%BC%A0%E9%80%81%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>kali-19.4汉化以及伪装win10界面</title>
    <link href="https://bmoos.github.io/2020/02/28/kali-19-4%E6%B1%89%E5%8C%96%E4%BB%A5%E5%8F%8A%E4%BC%AA%E8%A3%85win10%E7%95%8C%E9%9D%A2/"/>
    <id>https://bmoos.github.io/2020/02/28/kali-19-4%E6%B1%89%E5%8C%96%E4%BB%A5%E5%8F%8A%E4%BC%AA%E8%A3%85win10%E7%95%8C%E9%9D%A2/</id>
    <published>2020-02-28T13:36:55.000Z</published>
    <updated>2020-02-28T13:56:52.429Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​        之前用虚拟机做实验的时候汉化过一次，后来文件被删了，现在又要因为实验要求重新下载一次，但是忘记kali的汉化过程，这次特意记录一下。我用的是kali-2019.4版本，这个版本新上线了一个可以伪装成Windows10的功能，也挺有意思的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="操作系统" scheme="https://bmoos.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="kali" scheme="https://bmoos.github.io/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试实战--家用电脑</title>
    <link href="https://bmoos.github.io/2020/02/23/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98-%E5%AE%B6%E7%94%A8%E7%94%B5%E8%84%91/"/>
    <id>https://bmoos.github.io/2020/02/23/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98-%E5%AE%B6%E7%94%A8%E7%94%B5%E8%84%91/</id>
    <published>2020-02-23T05:57:52.000Z</published>
    <updated>2020-03-06T11:41:06.440Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​        因为疫情的影响导致现在还没有开学，在家里呆的有些无聊，最近也在学习渗透方面的知识，但是关于渗透测试，纸上得来终觉浅，绝知此事要躬行，还是要得累计实战经验，所以我就把目标转向了我家的家用台式电脑，就想搞一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="https://bmoos.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="文件上传漏洞" scheme="https://bmoos.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="webshell" scheme="https://bmoos.github.io/tags/webshell/"/>
    
  </entry>
  
  <entry>
    <title>浏览器安全</title>
    <link href="https://bmoos.github.io/2020/02/18/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%89%E5%85%A8/"/>
    <id>https://bmoos.github.io/2020/02/18/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%89%E5%85%A8/</id>
    <published>2020-02-18T04:00:07.000Z</published>
    <updated>2020-02-23T05:59:03.965Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;浏览器安全&quot;&gt;&lt;a href=&quot;#浏览器安全&quot; class=&quot;headerlink&quot; title=&quot;浏览器安全&quot;&gt;&lt;/a&gt;浏览器安全&lt;/h1&gt;&lt;p&gt;​        浏览器的安全策略有很多，比如同源策略，csp，cookie设置，以及浏览器沙箱等，都是游览器安全策略的内容。本文用于记录和理解这些设施，随时扩充，不断学习。&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="https://bmoos.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="同源策略" scheme="https://bmoos.github.io/tags/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5/"/>
    
      <category term="内容安全策略" scheme="https://bmoos.github.io/tags/%E5%86%85%E5%AE%B9%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5/"/>
    
  </entry>
  
  <entry>
    <title>VPN相关设置-shadowsocksR</title>
    <link href="https://bmoos.github.io/2020/02/14/VPN%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE-shadowsocksR/"/>
    <id>https://bmoos.github.io/2020/02/14/VPN%E7%9B%B8%E5%85%B3%E8%AE%BE%E7%BD%AE-shadowsocksR/</id>
    <published>2020-02-14T04:53:16.000Z</published>
    <updated>2020-02-16T10:39:41.846Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​        之前一直用的my2one的服务器代理，pc和移动端也用的ShadowsocksR，也就是SSR，一些设置之前也是用的my2one给的教程，一直没手动设置过，现在想用用TOR游览器，不过开始之前先把VPN设置好，别暴露了自己的IP和位置。&lt;/p&gt;
&lt;p&gt;（更新：使用tor游览器访问暗网）&lt;/p&gt;
    
    </summary>
    
    
      <category term="相关配置" scheme="https://bmoos.github.io/categories/%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="VPN" scheme="https://bmoos.github.io/tags/VPN/"/>
    
      <category term="ShadowsocksR" scheme="https://bmoos.github.io/tags/ShadowsocksR/"/>
    
  </entry>
  
  <entry>
    <title>hexo next主题更新</title>
    <link href="https://bmoos.github.io/2020/02/13/hexo-next%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%96%B0/"/>
    <id>https://bmoos.github.io/2020/02/13/hexo-next%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%96%B0/</id>
    <published>2020-02-13T13:16:01.000Z</published>
    <updated>2020-02-13T16:47:47.779Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;hexo-next主题更新&quot;&gt;&lt;a href=&quot;#hexo-next主题更新&quot; class=&quot;headerlink&quot; title=&quot;hexo next主题更新&quot;&gt;&lt;/a&gt;hexo next主题更新&lt;/h1&gt;&lt;p&gt;next主题设置文档链接：&lt;a href=&quot;http://theme-next.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://theme-next.iissnan.com/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;​        因为我之前用hexo搭建个人博客的时候一直使用的是next主题，不过在最近的一次next主题配置设置的时候，发现配置文件_config.YML中有很多我没有的选项，结果发现我的next版本是5.1.4，现在我要将它更新到7.4。&lt;/p&gt;
&lt;p&gt;​        想着next主题更新的话，顺便也可以更新下hexo，但是发现我就是当前最新版4.2.0，那就只更新一下next就行。&lt;/p&gt;
    
    </summary>
    
    
      <category term="相关配置" scheme="https://bmoos.github.io/categories/%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="hexo" scheme="https://bmoos.github.io/tags/hexo/"/>
    
      <category term="next主题" scheme="https://bmoos.github.io/tags/next%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>hexo相关问题</title>
    <link href="https://bmoos.github.io/2020/02/13/hexo%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/"/>
    <id>https://bmoos.github.io/2020/02/13/hexo%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</id>
    <published>2020-02-13T06:03:02.000Z</published>
    <updated>2020-02-13T16:45:11.420Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;hexo&quot;&gt;&lt;a href=&quot;#hexo&quot; class=&quot;headerlink&quot; title=&quot;hexo&quot;&gt;&lt;/a&gt;hexo&lt;/h1&gt;&lt;p&gt;hexo中文文档链接：&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://hexo.io/zh-cn/docs/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="相关配置" scheme="https://bmoos.github.io/categories/%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="hexo" scheme="https://bmoos.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>堆栈和队列</title>
    <link href="https://bmoos.github.io/2020/02/12/%E5%A0%86%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/"/>
    <id>https://bmoos.github.io/2020/02/12/%E5%A0%86%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/</id>
    <published>2020-02-12T11:16:09.000Z</published>
    <updated>2020-02-13T16:45:05.047Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​        堆栈和队列都是比较基本的数据结构，也是程序员应该掌握的结构，它们简单而又有用，以此，记录一下学习过程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="https://bmoos.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="c语言" scheme="https://bmoos.github.io/tags/c%E8%AF%AD%E8%A8%80/"/>
    
      <category term="堆栈" scheme="https://bmoos.github.io/tags/%E5%A0%86%E6%A0%88/"/>
    
      <category term="队列" scheme="https://bmoos.github.io/tags/%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>二叉搜索树</title>
    <link href="https://bmoos.github.io/2020/02/06/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/"/>
    <id>https://bmoos.github.io/2020/02/06/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</id>
    <published>2020-02-05T16:16:34.000Z</published>
    <updated>2020-02-13T16:45:32.217Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;二叉搜索树&quot;&gt;&lt;a href=&quot;#二叉搜索树&quot; class=&quot;headerlink&quot; title=&quot;二叉搜索树&quot;&gt;&lt;/a&gt;二叉搜索树&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;树的递归定义：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;树是一种数据结构，它要么为空，要么具有一个值并具有零个或多个&lt;strong&gt;孩子&lt;/strong&gt;，每个孩子本身也是一个树。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="https://bmoos.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="c语言" scheme="https://bmoos.github.io/tags/c%E8%AF%AD%E8%A8%80/"/>
    
      <category term="二叉搜索树" scheme="https://bmoos.github.io/tags/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解5</title>
    <link href="https://bmoos.github.io/2020/01/31/LeetCode%E9%A2%98%E8%A7%A35/"/>
    <id>https://bmoos.github.io/2020/01/31/LeetCode%E9%A2%98%E8%A7%A35/</id>
    <published>2020-01-31T06:25:00.000Z</published>
    <updated>2020-02-13T16:46:56.112Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode题解&quot;&gt;&lt;a href=&quot;#LeetCode题解&quot; class=&quot;headerlink&quot; title=&quot;LeetCode题解&quot;&gt;&lt;/a&gt;LeetCode题解&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;第5题，最长回文子串&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例 1：&lt;/p&gt;
&lt;p&gt;输入: “babad”&lt;br&gt;输出: “bab”&lt;br&gt;注意: “aba” 也是一个有效答案。&lt;/p&gt;
&lt;p&gt;示例 2：&lt;/p&gt;
&lt;p&gt;输入: “cbbd”&lt;br&gt;输出: “bb”&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="LeetCode题解" scheme="https://bmoos.github.io/categories/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="python" scheme="https://bmoos.github.io/tags/python/"/>
    
      <category term="c语言" scheme="https://bmoos.github.io/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解4</title>
    <link href="https://bmoos.github.io/2020/01/30/LeetCode%E9%A2%98%E8%A7%A34/"/>
    <id>https://bmoos.github.io/2020/01/30/LeetCode%E9%A2%98%E8%A7%A34/</id>
    <published>2020-01-29T16:06:26.000Z</published>
    <updated>2020-02-13T16:46:49.826Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode题解&quot;&gt;&lt;a href=&quot;#LeetCode题解&quot; class=&quot;headerlink&quot; title=&quot;LeetCode题解&quot;&gt;&lt;/a&gt;LeetCode题解&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;第4题，寻找两个有序数组的中位数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;给定两个大小为 m 和 n 的有序数组 nums1 和 nums2。&lt;/p&gt;
&lt;p&gt;请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为 &lt;strong&gt;O(log(m + n))&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;你可以假设 nums1 和 nums2 不会同时为空。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例 1:&lt;/p&gt;
&lt;p&gt;nums1 = [1, 3]&lt;br&gt;nums2 = [2]&lt;/p&gt;
&lt;p&gt;则中位数是 2.0&lt;/p&gt;
&lt;p&gt;示例 2:&lt;/p&gt;
&lt;p&gt;nums1 = [1, 2]&lt;br&gt;nums2 = [3, 4]&lt;/p&gt;
&lt;p&gt;则中位数是 (2 + 3)/2 = 2.5&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="LeetCode题解" scheme="https://bmoos.github.io/categories/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="python" scheme="https://bmoos.github.io/tags/python/"/>
    
      <category term="c语言" scheme="https://bmoos.github.io/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解3</title>
    <link href="https://bmoos.github.io/2020/01/27/LeetCode%E9%A2%98%E8%A7%A33/"/>
    <id>https://bmoos.github.io/2020/01/27/LeetCode%E9%A2%98%E8%A7%A33/</id>
    <published>2020-01-27T13:52:11.000Z</published>
    <updated>2020-02-13T16:46:42.868Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode题解&quot;&gt;&lt;a href=&quot;#LeetCode题解&quot; class=&quot;headerlink&quot; title=&quot;LeetCode题解&quot;&gt;&lt;/a&gt;LeetCode题解&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;第3题，无重复字符的最长字串&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例 1:&lt;/p&gt;
&lt;p&gt;输入: “abcabcbb”&lt;br&gt;输出: 3&lt;br&gt;解释: 因为无重复字符的最长子串是 “abc”，所以其长度为 3。&lt;/p&gt;
&lt;p&gt;示例 2:&lt;/p&gt;
&lt;p&gt;输入: “bbbbb”&lt;br&gt;输出: 1&lt;br&gt;解释: 因为无重复字符的最长子串是 “b”，所以其长度为 1。&lt;/p&gt;
&lt;p&gt;示例 3:&lt;/p&gt;
&lt;p&gt;输入: “pwwkew”&lt;br&gt;输出: 3&lt;br&gt;解释: 因为无重复字符的最长子串是 “wke”，所以其长度为 3。&lt;br&gt;请注意，你的答案必须是 子串 的长度，”pwke” 是一个子序列，不是子串。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="LeetCode题解" scheme="https://bmoos.github.io/categories/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="python" scheme="https://bmoos.github.io/tags/python/"/>
    
      <category term="c语言" scheme="https://bmoos.github.io/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解2</title>
    <link href="https://bmoos.github.io/2020/01/26/LeetCode%E9%A2%98%E8%A7%A32/"/>
    <id>https://bmoos.github.io/2020/01/26/LeetCode%E9%A2%98%E8%A7%A32/</id>
    <published>2020-01-26T13:56:46.000Z</published>
    <updated>2020-02-13T16:46:22.259Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode题解&quot;&gt;&lt;a href=&quot;#LeetCode题解&quot; class=&quot;headerlink&quot; title=&quot;LeetCode题解&quot;&gt;&lt;/a&gt;LeetCode题解&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;第2题，两数相加&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。&lt;/p&gt;
&lt;p&gt;如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。&lt;/p&gt;
&lt;p&gt;您可以假设除了数字 0 之外，这两个数都不会以 0 开头。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;输入：(2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6 -&amp;gt; 4)&lt;br&gt;输出：7 -&amp;gt; 0 -&amp;gt; 8&lt;br&gt;原因：342 + 465 = 807&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="LeetCode题解" scheme="https://bmoos.github.io/categories/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="python" scheme="https://bmoos.github.io/tags/python/"/>
    
      <category term="c语言" scheme="https://bmoos.github.io/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>古典密码</title>
    <link href="https://bmoos.github.io/2020/01/24/%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81/"/>
    <id>https://bmoos.github.io/2020/01/24/%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81/</id>
    <published>2020-01-24T12:33:36.000Z</published>
    <updated>2020-02-13T16:45:49.487Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;古典密码&quot;&gt;&lt;a href=&quot;#古典密码&quot; class=&quot;headerlink&quot; title=&quot;古典密码&quot;&gt;&lt;/a&gt;古典密码&lt;/h1&gt;&lt;p&gt;(1) 仿射密码  &lt;/p&gt;
&lt;p&gt;参数选取：模数n=26+10=36 (26个字母+10个数字)，k2 = 学号后3位 mod n；k1 = 学号后4位 mod n, 若k1与n不互素，则更新k1 = k1+7 或 k1 = k1-7。&lt;/p&gt;
    
    </summary>
    
    
      <category term="密码学" scheme="https://bmoos.github.io/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="python" scheme="https://bmoos.github.io/tags/python/"/>
    
      <category term="古典密码" scheme="https://bmoos.github.io/tags/%E5%8F%A4%E5%85%B8%E5%AF%86%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解35</title>
    <link href="https://bmoos.github.io/2020/01/23/LeetCode%E9%A2%98%E8%A7%A335/"/>
    <id>https://bmoos.github.io/2020/01/23/LeetCode%E9%A2%98%E8%A7%A335/</id>
    <published>2020-01-23T12:05:05.000Z</published>
    <updated>2020-02-13T16:47:03.880Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode题解&quot;&gt;&lt;a href=&quot;#LeetCode题解&quot; class=&quot;headerlink&quot; title=&quot;LeetCode题解&quot;&gt;&lt;/a&gt;LeetCode题解&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;第35题，搜索插入位置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。&lt;/p&gt;
&lt;p&gt;你可以假设数组中无重复元素。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;示例 1:&lt;/p&gt;
&lt;p&gt;输入: [1,3,5,6], 5&lt;br&gt;输出: 2&lt;/p&gt;
&lt;p&gt;示例 2:&lt;/p&gt;
&lt;p&gt;输入: [1,3,5,6], 2&lt;br&gt;输出: 1&lt;/p&gt;
&lt;p&gt;示例 3:&lt;/p&gt;
&lt;p&gt;输入: [1,3,5,6], 7&lt;br&gt;输出: 4&lt;/p&gt;
&lt;p&gt;示例 4:&lt;/p&gt;
&lt;p&gt;输入: [1,3,5,6], 0&lt;br&gt;输出: 0&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="LeetCode题解" scheme="https://bmoos.github.io/categories/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="python" scheme="https://bmoos.github.io/tags/python/"/>
    
      <category term="c语言" scheme="https://bmoos.github.io/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>在Linux环境下用c实现简易shell程序</title>
    <link href="https://bmoos.github.io/2020/01/22/%E5%9C%A8Linux%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%94%A8c%E5%AE%9E%E7%8E%B0%E7%AE%80%E6%98%93shell%E7%A8%8B%E5%BA%8F/"/>
    <id>https://bmoos.github.io/2020/01/22/%E5%9C%A8Linux%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%94%A8c%E5%AE%9E%E7%8E%B0%E7%AE%80%E6%98%93shell%E7%A8%8B%E5%BA%8F/</id>
    <published>2020-01-22T15:27:12.000Z</published>
    <updated>2020-02-13T16:46:00.033Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​        这学期学校开设了操作系统的课程，但是内容比较浅显基础，我认为操作系统作为程序员的基本功之一，比较重要，也就想自己多学点，就想用&lt;strong&gt;c语言&lt;/strong&gt;写一个在&lt;strong&gt;linux操作系统&lt;/strong&gt;上的&lt;strong&gt;shell&lt;/strong&gt;，顺便复习一下大一学的c语言，也在用&lt;strong&gt;《c和指针》&lt;/strong&gt;去复习，不得不说，这本书确实写的不错，当然，对初学者不是那么友好，有一定基础的人可以去看，很不错。&lt;/p&gt;
&lt;p&gt;最后，这篇文章里的代码可以在&lt;a href=&quot;https://gitee.com/BMooS/myshell&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这里&lt;/a&gt; (gitee)或者&lt;a href=&quot;https://github.com/BMooS/master&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这里&lt;/a&gt; (github)看到。&lt;/p&gt;
&lt;p&gt;顺便说一下，作者再写这个程序时候只是一个在读学生，有些错误和粗浅之处，欢迎大家指正，谢谢大家。&lt;/p&gt;
    
    </summary>
    
    
      <category term="操作系统" scheme="https://bmoos.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="c语言" scheme="https://bmoos.github.io/tags/c%E8%AF%AD%E8%A8%80/"/>
    
      <category term="linux" scheme="https://bmoos.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解146</title>
    <link href="https://bmoos.github.io/2020/01/21/LeetCode%E9%A2%98%E8%A7%A3146/"/>
    <id>https://bmoos.github.io/2020/01/21/LeetCode%E9%A2%98%E8%A7%A3146/</id>
    <published>2020-01-21T11:50:58.000Z</published>
    <updated>2020-02-13T16:47:15.684Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode题解&quot;&gt;&lt;a href=&quot;#LeetCode题解&quot; class=&quot;headerlink&quot; title=&quot;LeetCode题解&quot;&gt;&lt;/a&gt;LeetCode题解&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;第146题 LRU缓存机制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;运用你所掌握的数据结构，设计和实现一个  LRU (最近最少使用) 缓存机制。它应该支持以下操作： 获取数据 get 和 写入数据 put 。&lt;/p&gt;
&lt;p&gt;获取数据 get(key) - 如果密钥 (key) 存在于缓存中，则获取密钥的值（总是正数），否则返回 -1。&lt;br&gt;写入数据 put(key, value) - 如果密钥不存在，则写入其数据值。当缓存容量达到上限时，它应该在写入新数据之前删除最近最少使用的数据值，从而为新的数据值留出空间。&lt;/p&gt;
&lt;p&gt;进阶:&lt;/p&gt;
&lt;p&gt;你是否可以在 O(1) 时间复杂度内完成这两种操作？&lt;/p&gt;
&lt;p&gt;示例:&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;LRUCache cache = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LRUCache( &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* 缓存容量 */&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cache.&lt;span class=&quot;built_in&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cache.&lt;span class=&quot;built_in&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cache.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);       &lt;span class=&quot;comment&quot;&gt;// 返回  1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cache.&lt;span class=&quot;built_in&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;// 该操作会使得密钥 2 作废&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cache.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);       &lt;span class=&quot;comment&quot;&gt;// 返回 -1 (未找到)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cache.&lt;span class=&quot;built_in&quot;&gt;put&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;// 该操作会使得密钥 1 作废&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cache.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);       &lt;span class=&quot;comment&quot;&gt;// 返回 -1 (未找到)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cache.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);       &lt;span class=&quot;comment&quot;&gt;// 返回  3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cache.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);       &lt;span class=&quot;comment&quot;&gt;// 返回  4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="LeetCode题解" scheme="https://bmoos.github.io/categories/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="python" scheme="https://bmoos.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解777</title>
    <link href="https://bmoos.github.io/2020/01/18/LeetCode%E9%A2%98%E8%A7%A3777/"/>
    <id>https://bmoos.github.io/2020/01/18/LeetCode%E9%A2%98%E8%A7%A3777/</id>
    <published>2020-01-18T14:45:20.000Z</published>
    <updated>2020-02-13T16:47:22.889Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode题解&quot;&gt;&lt;a href=&quot;#LeetCode题解&quot; class=&quot;headerlink&quot; title=&quot;LeetCode题解&quot;&gt;&lt;/a&gt;LeetCode题解&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;第777题，在LR字符串中交换相邻字符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在一个由 ‘L’ , ‘R’ 和 ‘X’ 三个字符组成的字符串（例如”RXXLRXRXL”）中进行移动操作。一次移动操作指用一个”LX”替换一个”XL”，或者用一个”XR”替换一个”RX”。现给定起始字符串start和结束字符串end，请编写代码，当且仅当存在一系列移动操作使得start可以转换成end时， 返回True。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入: start = &lt;span class=&quot;string&quot;&gt;&quot;RXXLRXRXL&quot;&lt;/span&gt;, end = &lt;span class=&quot;string&quot;&gt;&quot;XRLXXRRLX&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出: &lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;解释:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我们可以通过以下几步将start转换成end:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RXXLRXRXL -&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;XRXLRXRXL -&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;XRLXRXRXL -&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;XRLXXRRXL -&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;XRLXXRRLX&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= len(start) = len(end) &amp;lt;= 10000&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;start&lt;/code&gt;和&lt;code&gt;end&lt;/code&gt;中的字符串仅限于&lt;code&gt;&amp;#39;L&amp;#39;&lt;/code&gt;, &lt;code&gt;&amp;#39;R&amp;#39;&lt;/code&gt;和&lt;code&gt;&amp;#39;X&amp;#39;&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="LeetCode题解" scheme="https://bmoos.github.io/categories/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="python" scheme="https://bmoos.github.io/tags/python/"/>
    
      <category term="c语言" scheme="https://bmoos.github.io/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
</feed>
