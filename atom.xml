<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BMooS</title>
  <icon>https://bmoos.github.io/icon.png</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bmoos.github.io/"/>
  <updated>2020-09-11T01:02:09.120Z</updated>
  <id>https://bmoos.github.io/</id>
  
  <author>
    <name>BMooS</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VulnHub靶机writeup--midnight</title>
    <link href="https://bmoos.github.io/2020/09/10/VulnHub%E9%9D%B6%E6%9C%BAwriteup-midnight/"/>
    <id>https://bmoos.github.io/2020/09/10/VulnHub%E9%9D%B6%E6%9C%BAwriteup-midnight/</id>
    <published>2020-09-10T14:14:55.000Z</published>
    <updated>2020-09-11T01:02:09.120Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;再来一个靶机，做完这个最近换点东西写，感觉这些靶机做多了也是套路，之后做的整点难度高点的，比如这个靶机难度比之前高点，学的东西也多一点。&lt;/p&gt;
    
    </summary>
    
    
      <category term="VulnHub" scheme="https://bmoos.github.io/categories/VulnHub/"/>
    
    
      <category term="渗透实战" scheme="https://bmoos.github.io/tags/%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>VulnHub靶机writeup--FunBox</title>
    <link href="https://bmoos.github.io/2020/09/07/VulnHub%E9%9D%B6%E6%9C%BAwriteup-FunBox/"/>
    <id>https://bmoos.github.io/2020/09/07/VulnHub%E9%9D%B6%E6%9C%BAwriteup-FunBox/</id>
    <published>2020-09-07T08:15:37.000Z</published>
    <updated>2020-09-08T02:33:57.094Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;终于开学了，但是开学后也没有期待的那么有意思，不过大四课变少了，现在得习惯在学校和在家的学习状态方式的区别，今天下午做个之前在家下载的靶机。&lt;/p&gt;
    
    </summary>
    
    
      <category term="VulnHub" scheme="https://bmoos.github.io/categories/VulnHub/"/>
    
    
      <category term="渗透实战" scheme="https://bmoos.github.io/tags/%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>VulnHub靶机writeup--So Simple 1</title>
    <link href="https://bmoos.github.io/2020/09/02/VulnHub%E9%9D%B6%E6%9C%BAwriteup-So-Simple-1/"/>
    <id>https://bmoos.github.io/2020/09/02/VulnHub%E9%9D%B6%E6%9C%BAwriteup-So-Simple-1/</id>
    <published>2020-09-02T10:21:23.000Z</published>
    <updated>2020-09-02T14:39:55.608Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;发现前两天下了个靶机还没做，今天就做一下，马上要开学了，有点期待。&lt;/p&gt;
    
    </summary>
    
    
      <category term="VulnHub" scheme="https://bmoos.github.io/categories/VulnHub/"/>
    
    
      <category term="渗透实战" scheme="https://bmoos.github.io/tags/%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>VulnHub靶机writeup--Billu_b0x</title>
    <link href="https://bmoos.github.io/2020/08/28/VulnHub%E9%9D%B6%E6%9C%BAwriteup-Billu-b0x/"/>
    <id>https://bmoos.github.io/2020/08/28/VulnHub%E9%9D%B6%E6%9C%BAwriteup-Billu-b0x/</id>
    <published>2020-08-28T12:17:28.000Z</published>
    <updated>2020-08-30T16:28:46.378Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近闲来无事，觉得自己学习理论知识太多，实验做的比较少，就在VulnHub上下载靶机来做一做，感觉VulnHub上有些靶机挺有意思的，取得root的方式也不唯一，这篇博客是VulnHub系列的第一篇writeup，之后也会把自己做的wp分享上来。&lt;/p&gt;
    
    </summary>
    
    
      <category term="VulnHub" scheme="https://bmoos.github.io/categories/VulnHub/"/>
    
    
      <category term="渗透实战" scheme="https://bmoos.github.io/tags/%E6%B8%97%E9%80%8F%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>powershell后渗透阶段---工具篇</title>
    <link href="https://bmoos.github.io/2020/08/18/powershell%E5%90%8E%E6%B8%97%E9%80%8F%E9%98%B6%E6%AE%B5-%E5%B7%A5%E5%85%B7%E7%AF%87/"/>
    <id>https://bmoos.github.io/2020/08/18/powershell%E5%90%8E%E6%B8%97%E9%80%8F%E9%98%B6%E6%AE%B5-%E5%B7%A5%E5%85%B7%E7%AF%87/</id>
    <published>2020-08-18T09:55:18.000Z</published>
    <updated>2020-08-23T15:34:13.398Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近闭关修炼了一段时间，主要学习渗透测试，恶意代码分析先暂停下，学习这些东西我都有兴趣，多学些多见识见识，增加一下自己对安全的理解。&lt;/p&gt;
&lt;p&gt;在学习渗透测试的时候，重新温习了metasploit，觉得这个漏洞利用框架真厉害，最近也买了很多书，等看完（感觉得花很长时间，flag先立起来）的时候，再更新一篇博客（估计得很长时间之后了）来写这些书的观后体验（已经看完两本了，还有五本），有些书确实有些老了（目前看的书一本是15年，一本是18年的），但是核心知识不会变。&lt;/p&gt;
&lt;p&gt;最近学习到了后渗透阶段攻击，是对windows平台使用powershell来进行的，这份技术在17-18年挺火的（最近也不差），也有很多工具在那时候被开发出来，例如powersploit，empire，powerup，nishang等工具，之所以流行，关键因素还是powershell的强大，和powershell在主流windows操作系统上默认安装以及当时powershell免杀，目前随着技术的发展，powershell已经可以被主流杀软检测，但是powershell的混淆技术也十分高超，目前来说利用powershell也是非常不错的。&lt;/p&gt;
&lt;p&gt;这篇博客主要用来记录学习本人在使用powershell技术过程中的三大工具powersploit，empire，nishang，这篇博客有可能比较长，因为我想做的详细点，尽量设置好章节，以便我之后进行查阅。（注意：阅读本文章需要一定的powershell基础）&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="https://bmoos.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="powershell" scheme="https://bmoos.github.io/tags/powershell/"/>
    
      <category term="nishang" scheme="https://bmoos.github.io/tags/nishang/"/>
    
      <category term="powersploit" scheme="https://bmoos.github.io/tags/powersploit/"/>
    
      <category term="empire" scheme="https://bmoos.github.io/tags/empire/"/>
    
  </entry>
  
  <entry>
    <title>记一次以DLL程序作后门的样本分析</title>
    <link href="https://bmoos.github.io/2020/07/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%A5DLL%E7%A8%8B%E5%BA%8F%E4%BD%9C%E5%90%8E%E9%97%A8%E7%9A%84%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    <id>https://bmoos.github.io/2020/07/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BB%A5DLL%E7%A8%8B%E5%BA%8F%E4%BD%9C%E5%90%8E%E9%97%A8%E7%9A%84%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/</id>
    <published>2020-07-19T13:29:53.000Z</published>
    <updated>2020-07-21T16:48:03.526Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近快被自己懒哭了，自从这学期结束后这段时间里感觉全都在玩，但实际也没玩的痛快，时间倒是过的挺快，不行，我最近得调整一下。&lt;/p&gt;
&lt;p&gt;最近在看《恶意代码分析实战》这本书，把高级静态分析看完了，看到课后有一个样本不错，挺有意思，挺经典的，决定拿来完整分析一波。&lt;/p&gt;
    
    </summary>
    
    
      <category term="样本分析" scheme="https://bmoos.github.io/categories/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    
    
      <category term="汇编语言" scheme="https://bmoos.github.io/tags/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/"/>
    
      <category term="恶意代码" scheme="https://bmoos.github.io/tags/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Kerberos协议</title>
    <link href="https://bmoos.github.io/2020/06/24/Kerberos%E5%8D%8F%E8%AE%AE/"/>
    <id>https://bmoos.github.io/2020/06/24/Kerberos%E5%8D%8F%E8%AE%AE/</id>
    <published>2020-06-24T03:55:18.000Z</published>
    <updated>2020-06-24T04:22:56.121Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Kerberos协议&quot;&gt;&lt;a href=&quot;#Kerberos协议&quot; class=&quot;headerlink&quot; title=&quot;Kerberos协议&quot;&gt;&lt;/a&gt;Kerberos协议&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这学期开设的安全协议课程由于疫情影响，期末考试改成论文形式的大报告，思来想去还是准备做一期Kerberos协议的，这个协议在内网域环境中必备，做这个也是为了以后学习内网渗透打打基础（自己太菜了，内网环境是真的复杂，还是自己以前Windows基础没打好）&lt;/p&gt;
    
    </summary>
    
    
      <category term="安全协议" scheme="https://bmoos.github.io/categories/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE/"/>
    
    
      <category term="Kerberos" scheme="https://bmoos.github.io/tags/Kerberos/"/>
    
      <category term="内网渗透" scheme="https://bmoos.github.io/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>缓冲区溢出攻击和实战war-ftp</title>
    <link href="https://bmoos.github.io/2020/06/20/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E5%92%8C%E5%AE%9E%E6%88%98war-ftp/"/>
    <id>https://bmoos.github.io/2020/06/20/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%94%BB%E5%87%BB%E5%92%8C%E5%AE%9E%E6%88%98war-ftp/</id>
    <published>2020-06-20T08:27:18.000Z</published>
    <updated>2020-06-22T12:04:42.927Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;缓冲区溢出攻击和实战war-ftp&quot;&gt;&lt;a href=&quot;#缓冲区溢出攻击和实战war-ftp&quot; class=&quot;headerlink&quot; title=&quot;缓冲区溢出攻击和实战war-ftp&quot;&gt;&lt;/a&gt;缓冲区溢出攻击和实战war-ftp&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;​        最近看到看雪学院有篇&lt;a href=&quot;https://bbs.pediy.com/thread-259883.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;博客&lt;/a&gt;写的FUZZ测试和漏洞利用，里面有介绍war-ftp 1.65版本存在缓冲区漏洞，之前有做过war-ftp 1.65的缓冲区攻击，不过当时应付差事，匆忙一做，最近学了一段时间的逆向，现在重新做做，重新理解一下。(本来这篇博客快做好了，想着有些累就睡觉了，结果一觉醒来上传到搜狗图床的图没了，淦，结果又重做了一次截了图，思路都打断了，MD)&lt;/p&gt;
    
    </summary>
    
    
      <category term="逆向" scheme="https://bmoos.github.io/categories/%E9%80%86%E5%90%91/"/>
    
    
      <category term="python" scheme="https://bmoos.github.io/tags/python/"/>
    
      <category term="exp" scheme="https://bmoos.github.io/tags/exp/"/>
    
      <category term="缓冲区溢出" scheme="https://bmoos.github.io/tags/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/"/>
    
  </entry>
  
  <entry>
    <title>vbs窃密脚本</title>
    <link href="https://bmoos.github.io/2020/05/21/vbs%E7%AA%83%E5%AF%86%E8%84%9A%E6%9C%AC/"/>
    <id>https://bmoos.github.io/2020/05/21/vbs%E7%AA%83%E5%AF%86%E8%84%9A%E6%9C%AC/</id>
    <published>2020-05-21T11:43:46.000Z</published>
    <updated>2020-05-21T12:27:52.928Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;VBS窃密脚本&quot;&gt;&lt;a href=&quot;#VBS窃密脚本&quot; class=&quot;headerlink&quot; title=&quot;VBS窃密脚本&quot;&gt;&lt;/a&gt;VBS窃密脚本&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;​        计算机病毒老师要让整一个大作业，形式不限，刚好对之前老师讲到的VBS脚本病毒感兴趣，所以自己也想整一个，设计了一个无害的窃密脚本，也算是巩固之前的学习。上个月找了家实习，所以博客最近更新比较慢，马上又要考试，估计后面更新随缘，等这段时间忙过去就好了，主要在公司实习做的主动防御，也就是流量分析和样本分析，这些内容不好写，后面碰到可以写的就发到博客上面来。&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂项" scheme="https://bmoos.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="vbs" scheme="https://bmoos.github.io/tags/vbs/"/>
    
  </entry>
  
  <entry>
    <title>SM3密码杂凑算法</title>
    <link href="https://bmoos.github.io/2020/05/07/SM3%E5%AF%86%E7%A0%81%E6%9D%82%E5%87%91%E7%AE%97%E6%B3%95/"/>
    <id>https://bmoos.github.io/2020/05/07/SM3%E5%AF%86%E7%A0%81%E6%9D%82%E5%87%91%E7%AE%97%E6%B3%95/</id>
    <published>2020-05-07T13:11:45.000Z</published>
    <updated>2020-05-07T15:02:30.905Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SM3密码杂凑算法&quot;&gt;&lt;a href=&quot;#SM3密码杂凑算法&quot; class=&quot;headerlink&quot; title=&quot;SM3密码杂凑算法&quot;&gt;&lt;/a&gt;SM3密码杂凑算法&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;国密即国家密码局认定的国产密码算法。主要有SM1，SM2，SM3，SM4。&lt;/p&gt;
&lt;p&gt;SM1 为对称加密。其加密强度与AES相当。该算法不公开，调用该算法时，需要通过加密芯片的接口进行调用。密钥长度和分组长度均为128位。&lt;/p&gt;
&lt;p&gt;SM2为非对称加密，基于ECC。该算法已公开。由于该算法基于ECC，故其签名速度与秘钥生成速度都快于RSA。ECC 256位（SM2采用的就是ECC 256位的一种）安全强度比RSA 2048位高，但运算速度快于RSA。&lt;/p&gt;
&lt;p&gt;SM3 消息摘要。可以用MD5作为对比理解。该算法已公开。校验结果为256位。&lt;/p&gt;
&lt;p&gt;SM4 无线局域网标准的分组数据算法。对称加密，密钥长度和分组长度均为128位。&lt;/p&gt;
&lt;p&gt;最近学到国密算法，记录一下SM3的原理(用了一下老师课件的图，主要公式太难敲了，文中仅有的几个公式是按照LaTeX格式写的，我不会用hexo生成LaTeX公式，按照格式凑合看吧)。&lt;/p&gt;
    
    </summary>
    
    
      <category term="密码学" scheme="https://bmoos.github.io/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="SM3" scheme="https://bmoos.github.io/tags/SM3/"/>
    
      <category term="hash" scheme="https://bmoos.github.io/tags/hash/"/>
    
  </entry>
  
  <entry>
    <title>docker指令</title>
    <link href="https://bmoos.github.io/2020/04/20/docker%E6%8C%87%E4%BB%A4/"/>
    <id>https://bmoos.github.io/2020/04/20/docker%E6%8C%87%E4%BB%A4/</id>
    <published>2020-04-20T04:51:28.000Z</published>
    <updated>2020-04-20T07:10:45.686Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker&quot;&gt;&lt;a href=&quot;#Docker&quot; class=&quot;headerlink&quot; title=&quot;Docker&quot;&gt;&lt;/a&gt;Docker&lt;/h1&gt;&lt;p&gt;本文用于记录常用的docker指令，关于docker的介绍和学习可以看这篇&lt;a href=&quot;https://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;博客&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具使用" scheme="https://bmoos.github.io/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="docker" scheme="https://bmoos.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode题解289</title>
    <link href="https://bmoos.github.io/2020/04/19/LeetCode%E9%A2%98%E8%A7%A3289/"/>
    <id>https://bmoos.github.io/2020/04/19/LeetCode%E9%A2%98%E8%A7%A3289/</id>
    <published>2020-04-19T13:09:56.000Z</published>
    <updated>2020-04-19T13:55:05.173Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LeetCode题解&quot;&gt;&lt;a href=&quot;#LeetCode题解&quot; class=&quot;headerlink&quot; title=&quot;LeetCode题解&quot;&gt;&lt;/a&gt;LeetCode题解&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;第289题 生命游戏&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据&lt;a href=&quot;https://baike.baidu.com/item/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/2926434?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;百度百科&lt;/a&gt;，生命游戏，简称为生命，是英国数学家约翰·何顿·康威(老爷子前段时间因为新冠肺炎去世，唉，缅怀)在 1970 年发明的细胞自动机。&lt;/p&gt;
&lt;p&gt;给定一个包含 m × n 个格子的面板，每一个格子都可以看成是一个细胞。每个细胞都具有一个初始状态：1 即为活细胞（live），或 0 即为死细胞（dead）。每个细胞与其八个相邻位置（水平，垂直，对角线）的细胞都遵循以下四条生存定律：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;如果活细胞周围八个位置的活细胞数少于两个，则该位置活细胞死亡；&lt;/li&gt;
&lt;li&gt;如果活细胞周围八个位置有两个或三个活细胞，则该位置活细胞仍然存活；&lt;/li&gt;
&lt;li&gt;如果活细胞周围八个位置有超过三个活细胞，则该位置活细胞死亡；&lt;/li&gt;
&lt;li&gt;如果死细胞周围正好有三个活细胞，则该位置死细胞复活；&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;根据当前状态，写一个函数来计算面板上所有细胞的下一个（一次更新后的）状态。下一个状态是通过将上述规则同时应用于当前状态下的每个细胞所形成的，其中细胞的出生和死亡是同时发生的。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;输入：&lt;br&gt;[&lt;br&gt;  [0,1,0],&lt;br&gt;  [0,0,1],&lt;br&gt;  [1,1,1],&lt;br&gt;  [0,0,0]&lt;br&gt;]&lt;br&gt;输出：&lt;br&gt;[&lt;br&gt;  [0,0,0],&lt;br&gt;  [1,0,1],&lt;br&gt;  [0,1,1],&lt;br&gt;  [0,1,0]&lt;br&gt;]&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="LeetCode题解" scheme="https://bmoos.github.io/categories/LeetCode%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="python" scheme="https://bmoos.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>文件包含漏洞</title>
    <link href="https://bmoos.github.io/2020/04/06/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/"/>
    <id>https://bmoos.github.io/2020/04/06/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-04-05T16:31:59.000Z</published>
    <updated>2020-04-19T13:05:38.259Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;（冲冲冲，继续学习。）&lt;/p&gt;
&lt;p&gt;什么是文件包含漏洞？&lt;/p&gt;
&lt;p&gt;服务器通过PHP的特性去包含任意文件时，对文件来源过滤不严，从而可以包含一个恶意文件。&lt;/p&gt;
&lt;p&gt;简要来说，服务器执行PHP文件时，可以通过文件包含函数加载另一个文件中的PHP代码，并且当PHP来执行，这会为开发者节省大量的时间，但是如果这个包含的文件是变量或者用户可以篡改的，且开发人员过滤不严，那么就有可能包含一个恶意文件，导致服务器遭到侵害。&lt;/p&gt;
&lt;p&gt;（注意：文件包含不止在PHP中，只是PHP比较严重而已，其他脚本语言例如JSP，ASP也有文件包含漏洞）&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="https://bmoos.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="文件包含漏洞" scheme="https://bmoos.github.io/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>文件上传漏洞</title>
    <link href="https://bmoos.github.io/2020/04/01/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <id>https://bmoos.github.io/2020/04/01/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-04-01T04:23:14.000Z</published>
    <updated>2020-04-04T14:30:25.353Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;什么是文件上传？&lt;/p&gt;
&lt;p&gt;将客户端数据以文件形式封装，通过网络协议发送到服务端，保存在服务端中，在硬盘上作为真实文件形式进行保存。&lt;/p&gt;
&lt;p&gt;文件上传功能本身没有问题，是正常的业务需求，但有问题的是文件上传后，服务器怎么处理，解释文件，这样就造就了文件上传漏洞(file up load vulnerability)&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="https://bmoos.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="文件上传漏洞" scheme="https://bmoos.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入</title>
    <link href="https://bmoos.github.io/2020/03/21/SQL%E6%B3%A8%E5%85%A5/"/>
    <id>https://bmoos.github.io/2020/03/21/SQL%E6%B3%A8%E5%85%A5/</id>
    <published>2020-03-21T06:36:20.000Z</published>
    <updated>2020-03-28T08:07:25.830Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​        SQL注入漏洞是目前web安全中最为高危漏洞之一，在OWASP常年排名第一(截至2020.3.21)，也是最为常见的漏洞之一，虽然随着开发人员安全意识的提高和开发工程的模板化，SQL注入不再像以前那么随处可见且没有任何防护，但是渗透技术也日趋复杂多样，而且提供web服务的企业太多了，并不是每一个企业的web服务都具有良好的安全防护措施，所以SQL注入目前还是渗透人员必须所具备的能力之一。&lt;/p&gt;
&lt;p&gt;​        对大多数数据库而言，SQL注入的原理是类似的，因为每个SQL数据库都要一定的遵守SQL语法，但它们之间存在一些差异，本文章因为技术有限，使用市面上常用的SQL数据库——MySQL数据库进行举例说明，但疏通同归，攻击者对数据库的注入，其利用方式也是类似的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查询数据&lt;/li&gt;
&lt;li&gt;读写文件&lt;/li&gt;
&lt;li&gt;执行命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​        在权限允许的情况下，通常数据库都支持以上三种操作，而且攻击者的最终目的也是以上三种，只不过不同数据库注入的SQL语句不一样而已。&lt;/p&gt;
&lt;p&gt;​        通常的SQL注入可以使用工具，比如SQLmap，其内置了很多功能，全面而强大，但是还是要掌握一些手动注入的方式，才能真正了解SQL注入。&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="https://bmoos.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="SQL注入" scheme="https://bmoos.github.io/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>小工具-我的博客查看脚本</title>
    <link href="https://bmoos.github.io/2020/03/18/%E5%B0%8F%E5%B7%A5%E5%85%B7-%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9F%A5%E7%9C%8B%E8%84%9A%E6%9C%AC/"/>
    <id>https://bmoos.github.io/2020/03/18/%E5%B0%8F%E5%B7%A5%E5%85%B7-%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9F%A5%E7%9C%8B%E8%84%9A%E6%9C%AC/</id>
    <published>2020-03-18T13:18:44.000Z</published>
    <updated>2020-03-18T13:43:33.271Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​        这段时间在学习正则，学完总想拿来实践一下，转头想了想，干起了老本行——爬虫，虽然之前写爬虫的时候也用到了正则，但是都是知其然不知其所以然，也好久没有过python写代码了，随便写了写脚本，之后也会写一些渗透用的脚本(poc或者exp)，这些都会放到杂项分类里面。&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂项" scheme="https://bmoos.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="python" scheme="https://bmoos.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="https://bmoos.github.io/2020/03/17/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://bmoos.github.io/2020/03/17/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2020-03-17T11:00:20.000Z</published>
    <updated>2020-03-17T17:25:26.229Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;正则表达式&quot;&gt;&lt;a href=&quot;#正则表达式&quot; class=&quot;headerlink&quot; title=&quot;正则表达式&quot;&gt;&lt;/a&gt;正则表达式&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;​        正则表达式(Regular Expression)是一种&lt;strong&gt;文本模式&lt;/strong&gt;，包括普通字符（例如，a 到 z 之间的字母）和特殊字符（称为”元字符”）。&lt;/p&gt;
&lt;p&gt;​        正则表达式使用单个字符串来描述、匹配一系列匹配某个&lt;strong&gt;句法规则&lt;/strong&gt;的字符串。&lt;/p&gt;
&lt;p&gt;​        学习正则可以提高效率，而且现在大多语言都支持正则，之前因为觉得正则太复杂而放弃，现在有了大把时间可以重新学习一下。。。&lt;/p&gt;
&lt;p&gt;​        注意：本文只是对正则入门级操作，复杂多样的正则不涉及(PS：太难了QAQ)。&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具使用" scheme="https://bmoos.github.io/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="python" scheme="https://bmoos.github.io/tags/python/"/>
    
      <category term="正则表达式" scheme="https://bmoos.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>git使用</title>
    <link href="https://bmoos.github.io/2020/03/10/git%E4%BD%BF%E7%94%A8/"/>
    <id>https://bmoos.github.io/2020/03/10/git%E4%BD%BF%E7%94%A8/</id>
    <published>2020-03-09T16:35:22.000Z</published>
    <updated>2020-03-11T06:24:23.867Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Git&quot;&gt;&lt;a href=&quot;#Git&quot; class=&quot;headerlink&quot; title=&quot;Git&quot;&gt;&lt;/a&gt;Git&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;​        git是一个开源的分布式版本控制系统，它能帮助你管理不同的版本，并且随时退回到任意时刻，而且也可以协同开发。之前也学过一点git，不过那阵用不到git，而且学的也比较琐碎难以理解，现在在我有一定基础的情况下，重新学习git，写下这份博客用以记录学习内容。Git指令繁多，但是常用的就十几条，下述介绍的指令掌握了足以应对常规使用，新的指令也会慢慢学习记录。&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具使用" scheme="https://bmoos.github.io/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    
      <category term="git" scheme="https://bmoos.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>XSS跨站脚本漏洞</title>
    <link href="https://bmoos.github.io/2020/03/03/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%BC%8F%E6%B4%9E/"/>
    <id>https://bmoos.github.io/2020/03/03/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-03-03T15:14:24.000Z</published>
    <updated>2020-03-05T16:29:46.623Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​        XSS(cross site scripting)即跨站脚本攻击，是最常见的web应用程序漏洞之一。&lt;/p&gt;
&lt;p&gt;​        XSS是指攻击者在网页嵌入客户端脚本，通常使用的是JavaScript编写的恶意代码，当用户浏览网页时，恶意代码将在用户的浏览器上执行。&lt;/p&gt;
&lt;p&gt;​        XSS属于前端漏洞，受害者是用户，但是网站的管理人员也是用户之一，也有可能被攻击者拿到管理员权限，作为跳板实施攻击。&lt;/p&gt;
&lt;p&gt;​        本篇文章用于对XSS原理解析和对各种类型的XSS介绍。&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="https://bmoos.github.io/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="XSS" scheme="https://bmoos.github.io/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>DNS服务以及DNS域传送漏洞</title>
    <link href="https://bmoos.github.io/2020/03/01/DNS%E6%9C%8D%E5%8A%A1%E4%BB%A5%E5%8F%8ADNS%E5%9F%9F%E4%BC%A0%E9%80%81%E6%BC%8F%E6%B4%9E/"/>
    <id>https://bmoos.github.io/2020/03/01/DNS%E6%9C%8D%E5%8A%A1%E4%BB%A5%E5%8F%8ADNS%E5%9F%9F%E4%BC%A0%E9%80%81%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-02-29T16:04:10.000Z</published>
    <updated>2020-03-18T09:45:43.339Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;​        疫情影响，宅在家里，开学推迟，要上网课，有课名叫，网络攻防，要上实验，网上靶机，可是靶机，实在不行，自己搭建，两眼蒙蔽，从头做起，选择放弃。(哭)&lt;/p&gt;
&lt;p&gt;​        这次要做的实验内容和DNS域传送漏洞有关，其实也是用工具进行信息收集，之前忽略了信息收集这块，觉得不太重要，但是现在回头来看，这是最重要的一部分，自己也回头补补。DNS域名查询也很重要，要不渗透前都不知道目标是谁。&lt;/p&gt;
    
    </summary>
    
    
      <category term="计算机网络" scheme="https://bmoos.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="DNS" scheme="https://bmoos.github.io/tags/DNS/"/>
    
      <category term="DNS域传送漏洞" scheme="https://bmoos.github.io/tags/DNS%E5%9F%9F%E4%BC%A0%E9%80%81%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
</feed>
